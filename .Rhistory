res <- afCEC(dog)
library(afCEC)
data(dog)
res<-afCEC(dog,5)
plot(dog)
plot.afCEC(dog)
library(afCEC)
data(dog)
res<-afCEC(dog,5)
plot(dog)
library(afCEC)
data(dog)
res<-afCEC(dog,5)
plot(res)
plot(res)
library(afCEC)
data(dog)
data(dog)
res<-afCEC(dog,3)
plot(res)
res<-afCEC(dog,3)
plot(res)
res<-afCEC(dog,3)
plot(res)
library(afCEC)
data(dog)
res<-afCEC(dog,10)
plot(res)
library(afCEC)
library(afCEC)
library(afCEC)
library(afCEC)
library(afCEC)
rgl.points
library(afCEC)
rgl.points
data(dog)
library(afCEC)
data(dog)
res<-afCEC(dog,10)
plot(res)
rgl.points
data(rabbit)
res<-afCEC(rabbit,5,numberOfStarts=1)
res
plot(res)
library(afCEC)
plot(res)
plot(res)
library(afCEC)
plot(res)
library(afCEC)
plot(res)
library(afCEC)
library(afCEC)
plot(res)
library(afCEC)
library(afCEC)
library(afCEC)
data(dog)
res<-afCEC(dog,5)
plot(dog)
library(afCEC)
plot(res)
data(rabbit)
res<-afCEC(rabbit,7,numberOfStarts=1)
res
plot(res)
plot(res)
library(afCEC)
library(afCEC)
rgl.points
library(afCEC)
library(afCEC)
rgl.points
library(afCEC)
rgl.points
data(airplane)
res<-afCEC(airplane,23,numberOfStarts=1)
librar(afCEC(
)
xc
csd
library(afCEC)
library(afCEC)
afCEC
data(airplane)
res<-afCEC(airplane,23,numberOfStarts=1)
res
plot(res)
plot(res)
library(afCEC)
library(afCEC)
library(afCEC)
rgl.points
library(afCEC)
library(afCEC)
library(afCEC)
library(afCEC)
data(cat)
res<-afCEC(cat,4)
plot(cat)
plot(res)
plot(cat)
plot(res)
res<-afCEC(cat,12)
plot(res)
2+2
res
plot(res)
res<-afCEC(cat,12,numberOfStarts=100)
res
plot(res)
library(afCEC)
library(afCEC)
library(afCEC)
library(afCEC)
data(airplane)
data(airplane)
res<-afCEC(airplane,17)
res
plot(res)
library(afCEC)
library(afCEC)
data(dog)
plot(dog)
res<-afCEC(dog,5)
res<-afCEC(dog,5)
library(afCEC)
data(dog)
res<-afCEC(dog,5)
2+2
plot(dog)
plot(res)
library(afCEC)
library(afCEC)
library(afCEC)
library(afCEC)
library(afCEC)
data(cat)
plot(cat)
res<-afCEC(cat,14,numberOfStarts=10)
2+2
plot(res)
res<-afCEC(cat,14,numberOfStarts=100)
2+2
plot(res)
library(afCEC)
data(dog)
res<-afCEC(dog,5)
2+2
plot(res)
library(afCEC)
library(afCEC)
library(afCEC)
data(dog)
library(afCEC);
data(dog);
res<afCEC(dog,10,interactive=TRUE);
for (i=1:length(res)) {
plot(res[[i]]);
}
for (i in 1:length(res)) {
plot(res[[i]]);
}
res
length(res)
plot(res[[1]])
res[[1]]
plot(res)
library(afCEC);
data(dog);
res<afCEC(dog,10,interactive=TRUE);
for (i in 1:length(res)) {
plot(res[[i]]);
}
library(afCEC);
data(dog);
res<afCEC(dog,10,interactive=TRUE);
library(afCEC);
data(dog);
res<-afCEC(dog,10,interactive=TRUE);
for (i in 1:length(res)) {
plot(res[[i]]);
}
library(afCEC);
data(dog);
res<-afCEC(dog,10,cardMin=0.05,interactive=TRUE);
for (i in 1:length(res)) {
plot(res[[i]]);
}
length(res)
res[[100]]$number_of_clusters
res[[100]]$cardinalities
library(afCEC);
data(dog);
res<-afCEC(dog,10,cardMin=0.5,interactive=TRUE);
for (i in 1:length(res)) {
plot(res[[i]]);
}
library(afCEC);
data(dog);
res<-afCEC(dog,10,cardMin=0.5,numberOfStarts=1,interactive=TRUE);
for (i in 1:length(res)) {
plot(res[[i]]);
}
library(afCEC);
data(dog);
res<-afCEC(dog,10,cardMin=0.5,numberOfStarts=1,interactive=TRUE);
for (i in 1:length(res)) {
plot(res[[i]]);
}
library(afCEC)
library(afCEC)
library(afCEC);
data(dog);
res<-afCEC(dog,10,cardMin=0.05,numberOfStarts=1);
2+2
library(afCEC)
library(afCEC);
data(dog);
res<-afCEC(dog,10,cardMin=0.05,numberOfStarts=1);
library(afCEC)
library(afCEC);
data(dog);
res<-afCEC(dog,10,cardMin=0.05,numberOfStarts=1);
2+2
library(afCEC)
library(afCEC)
library(afCEC);
data(dog);
res<-afCEC(dog,10,cardMin=0.05,numberOfStarts=1);
plot(res)
library(afCEC);
data(dog);
res<-afCEC(dog,10,cardMin=0.05,numberOfStarts=10);
plot(res)
library(afCEC);
data(dog);
res<-afCEC(dog,10,cardMin=0.05,numberOfStarts=10);
plot(res)
library(afCEC);
data(dog);
res<-afCEC(dog,10,cardMin=0.05,numberOfStarts=1);
plot(res)
library(afCEC);
data(dog);
res<-afCEC(dog,10,cardMin=0.05,numberOfStarts=1);
plot(res)
library(afCEC);
data(dog);
res<-afCEC(dog,10,cardMin=0.05,numberOfStarts=10);
plot(res)
library(afCEC)
library(afCEC);
data(dog);
res<-afCEC(dog,10,cardMin=0.05,numberOfStarts=1,interactive=TRUE);
for (i in 1:length(res)) {
plot(res[[i]]);
}
library(afCEC)
library(afCEC);
data(dog);
res<-afCEC(dog,10,cardMin=0.05,numberOfStarts=10,interactive=TRUE);
for (i in 1:length(res)) {
plot(res[[i]]);
}
library(afCEC)
library(afCEC)
library(afCEC)
library(afCEC);
data(dog);
res<-afCEC(dog,10,cardMin=0.05,numberOfStarts=1);
plot(res)
library(afCEC);
data(dog);
res<-afCEC(dog,10,cardMin=0.05,numberOfStarts=1);
plot(res)
library(afCEC);
data(dog);
res<-afCEC(dog,10,cardMin=0.05,numberOfStarts=1);
plot(res)
res$cost_total
costs=rep(0,10)
costs
results<-list()
results[[0]]=0
results[0]=0
results
results[0]
results[[0]]=0
list(10)
results
results[[1]]<-1
results
library(afCEC);
data(dog);
costs<-rep(0,25);
results<-list();
for (i in 1:25) {
results[[i]]<-afCEC(dog,10,cardMin=0.05,numberOfStarts=1);
costs[i]<-results[[i]]$cost_total;
}
costs
library(afCEC);
data(dog);
costs<-list();
results<-list();
for (i in 1:25) {
results[[i]]<-afCEC(dog,10,cardMin=0.05,numberOfStarts=1);
costs[[i]]<-list(i,results[[i]]$cost_total);
}
costs
library(afCEC);
data(dog);
costs<-list();
results<-list();
for (i in 1:25) {
results[[i]]<-afCEC(dog,10,cardMin=0.05,numberOfStarts=1);
costs[[i]]<-list(i,results[[i]]$cost_total);
}
for (i in 1:25) {
print("%d,%f\n",i,costs[[i]][[1]]);
}
for (i in 1:25) {
print(i," ",costs[[i]][[1]],"\n");
}
print(1,2(
)
dfa
print(1,2)
for (i in 1:25) {
printf(i," ",costs[[i]][[1]],"\n");
}
for (i in 1:25) {
print(sprintf(i," ",costs[[i]][[1]],"\n"));
}
for (i in 1:25) {
print(sprintf("%d,%f\n",i,costs[[i]][[1]]);
}
for (i in 1:25) {
print(sprintf("%d,%f\n",i,costs[[i]][[1]]));
}
for (i in 1:25) {
cat(sprintf("%d,%f\naa",i,costs[[i]][[1]]));
}
library(afCEC);
data(dog);
costs<-list();
results<-list();
for (i in 1:25) {
results[[i]]<-afCEC(dog,10,cardMin=0.05,numberOfStarts=1);
costs[[i]]<-list(i,results[[i]]$cost_total);
}
for (i in 1:25) {
cat(sprintf("(%d,%f)\n",i,costs[[i]][[1]]));
}
for (i in 1:25) {
cat(sprintf("(%d,%f)\n",i,costs[[i]][[2]]));
}
plot(res[[1]])
plot(results[[1]])
library(afCEC);
data(dog);
costs<-list();
results<-list();
for (i in 1:100) {
results[[i]]<-afCEC(dog,10,cardMin=0.05,numberOfStarts=1);
costs[[i]]<-list(i,results[[i]]$cost_total);
}
for (i in 1:100) {
cat(sprintf("(%d,%f)\n",i,costs[[i]][[2]]));
}
min(costs)
as.vector(costs)
infty
infinity
inf
INF
inf
Inf
minVal=Inf;
minInd=0;
for (i in 1:100) {
if(costs[[i]]<minVal) {
minVal=costs[[i]];
minInd=i;
}
}
minVal=Inf;
minInd=0;
for (i in 1:100) {
if(costs[[i]]<minVal) {
minVal=costs[[i]];
minInd=i;
}
}
costs[[1]]
minVal=Inf;
minInd=0;
for (i in 1:100) {
if(costs[[i]][[2]]<minVal) {
minVal=costs[[i]][[2]];
minInd=i;
}
}
minVal
minInd
costs[[minInd]][[2]]
plot(results[[minInd]])
results[[minInd]]$cardinalities
results[[0]]$cardinalities
results[[1]]$cardinalities
library(afCEC)
library(afCEC);
data(dog);
res<-afCEC(dog,10,cardMin=0.05,numberOfStarts=10,interactive=TRUE);
for (i in 1:length(res)) {
plot(res[[i]]);
}
res$cardinalities
res[[length(res)]]$cardinalities
library(afCEC);
data(dog);
res<-afCEC(dog,10,cardMin=0.1,numberOfStarts=10,interactive=TRUE);
for (i in 1:length(res)) {
plot(res[[i]]);
}
library(afCEC);
data(dog);
res<-afCEC(dog,10,cardMin=0.1,numberOfStarts=10,interactive=TRUE);
for (i in 1:length(res)) {
plot(res[[i]]);
}
library(afCEC);
data(dog);
res<-afCEC(dog,10,cardMin=0.02,numberOfStarts=10,interactive=TRUE);
for (i in 1:length(res)) {
plot(res[[i]]);
}
library(afCEC);
data(dog);
res<-afCEC(dog,10,cardMin=0.02,numberOfStarts=10,interactive=TRUE,initialLabels="random");
for (i in 1:length(res)) {
plot(res[[i]]);
}
library(afCEC);
data(dog);
res<-afCEC(dog,10,cardMin=0.05,numberOfStarts=10,interactive=TRUE,initialLabels="random");
for (i in 1:length(res)) {
plot(res[[i]]);
}
library(afCEC);
data(dog);
res<-afCEC(dog,10,cardMin=0.05,numberOfStarts=10,interactive=TRUE,initialLabels="random");
for (i in 1:length(res)) {
plot(res[[i]]);
}
library(afCEC);
data(dog);
res<-afCEC(dog,10,cardMin=0.05,numberOfStarts=10,interactive=TRUE,initialLabels="random");
for (i in 1:length(res)) {
plot(res[[i]]);
}
library(afCEC);
data(dog);
res<-afCEC(dog,15,cardMin=0.05,numberOfStarts=10,interactive=TRUE,initialLabels="random");
for (i in 1:length(res)) {
plot(res[[i]]);
}
library(afCEC);
data(dog);
res<-afCEC(dog,10,cardMin=0.02,numberOfStarts=10,interactive=TRUE,initialLabels="random");
for (i in 1:length(res)) {
plot(res[[i]]);
}
library(afCEC);
data(dog);
res<-afCEC(dog,10,cardMin=0.01,numberOfStarts=10,interactive=TRUE,initialLabels="random");
for (i in 1:length(res)) {
plot(res[[i]]);
}
library(afCEC);
data(dog);
res<-afCEC(dog,20,cardMin=0.01,numberOfStarts=10,interactive=TRUE,initialLabels="random");
for (i in 1:length(res)) {
plot(res[[i]]);
}
library(afCEC);
data(dog);
res<-afCEC(dog,15,cardMin=0.01,numberOfStarts=10,interactive=TRUE,initialLabels="random");
for (i in 1:length(res)) {
plot(res[[i]]);
}
library(afCEC);
data(dog);
res<-afCEC(dog,15,cardMin=0.01,numberOfStarts=10,interactive=TRUE,initialLabels="random");
for (i in 1:length(res)) {
plot(res[[i]]);
}
library(afCEC);
data(dog);
res<-afCEC(dog,15,cardMin=0.01,numberOfStarts=10,interactive=TRUE);
for (i in 1:length(res)) {
plot(res[[i]]);
}
library(afCEC);
data(dog);
res<-afCEC(dog,10,cardMin=0.1,numberOfStarts=10,interactive=TRUE);
for (i in 1:length(res)) {
plot(res[[i]]);
}
