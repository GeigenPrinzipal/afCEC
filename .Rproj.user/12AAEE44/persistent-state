build-last-errors="[{\"column\":23,\"line\":23,\"log_line\":-1,\"log_path\":\"\",\"message\":\"dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]\",\"path\":\"~/afCEC/src/afCEC.cpp\",\"show_error_list\":true,\"type\":1},{\"column\":23,\"line\":32,\"log_line\":-1,\"log_path\":\"\",\"message\":\"comparison between signed and unsigned integer expressions [-Wsign-compare]\",\"path\":\"~/afCEC/src/afCEC.cpp\",\"show_error_list\":true,\"type\":1},{\"column\":31,\"line\":38,\"log_line\":-1,\"log_path\":\"\",\"message\":\"comparison between signed and unsigned integer expressions [-Wsign-compare]\",\"path\":\"~/afCEC/src/afCEC.cpp\",\"show_error_list\":true,\"type\":1},{\"column\":23,\"line\":52,\"log_line\":-1,\"log_path\":\"\",\"message\":\"comparison between signed and unsigned integer expressions [-Wsign-compare]\",\"path\":\"~/afCEC/src/afCEC.cpp\",\"show_error_list\":true,\"type\":1},{\"column\":31,\"line\":58,\"log_line\":-1,\"log_path\":\"\",\"message\":\"comparison between signed and unsigned integer expressions [-Wsign-compare]\",\"path\":\"~/afCEC/src/afCEC.cpp\",\"show_error_list\":true,\"type\":1},{\"column\":21,\"line\":83,\"log_line\":-1,\"log_path\":\"\",\"message\":\"comparison between signed and unsigned integer expressions [-Wsign-compare]\",\"path\":\"~/afCEC/src/afCEC.cpp\",\"show_error_list\":true,\"type\":1},{\"column\":31,\"line\":85,\"log_line\":-1,\"log_path\":\"\",\"message\":\"comparison between signed and unsigned integer expressions [-Wsign-compare]\",\"path\":\"~/afCEC/src/afCEC.cpp\",\"show_error_list\":true,\"type\":1},{\"column\":31,\"line\":188,\"log_line\":-1,\"log_path\":\"\",\"message\":\"comparison between signed and unsigned integer expressions [-Wsign-compare]\",\"path\":\"~/afCEC/src/afCEC.cpp\",\"show_error_list\":true,\"type\":1},{\"column\":31,\"line\":224,\"log_line\":-1,\"log_path\":\"\",\"message\":\"comparison between signed and unsigned integer expressions [-Wsign-compare]\",\"path\":\"~/afCEC/src/afCEC.cpp\",\"show_error_list\":true,\"type\":1},{\"column\":31,\"line\":236,\"log_line\":-1,\"log_path\":\"\",\"message\":\"comparison between signed and unsigned integer expressions [-Wsign-compare]\",\"path\":\"~/afCEC/src/afCEC.cpp\",\"show_error_list\":true,\"type\":1},{\"column\":31,\"line\":245,\"log_line\":-1,\"log_path\":\"\",\"message\":\"comparison between signed and unsigned integer expressions [-Wsign-compare]\",\"path\":\"~/afCEC/src/afCEC.cpp\",\"show_error_list\":true,\"type\":1},{\"column\":31,\"line\":249,\"log_line\":-1,\"log_path\":\"\",\"message\":\"comparison between signed and unsigned integer expressions [-Wsign-compare]\",\"path\":\"~/afCEC/src/afCEC.cpp\",\"show_error_list\":true,\"type\":1},{\"column\":31,\"line\":280,\"log_line\":-1,\"log_path\":\"\",\"message\":\"comparison between signed and unsigned integer expressions [-Wsign-compare]\",\"path\":\"~/afCEC/src/afCEC.cpp\",\"show_error_list\":true,\"type\":1},{\"column\":31,\"line\":311,\"log_line\":-1,\"log_path\":\"\",\"message\":\"comparison between signed and unsigned integer expressions [-Wsign-compare]\",\"path\":\"~/afCEC/src/afCEC.cpp\",\"show_error_list\":true,\"type\":1},{\"column\":31,\"line\":323,\"log_line\":-1,\"log_path\":\"\",\"message\":\"comparison between signed and unsigned integer expressions [-Wsign-compare]\",\"path\":\"~/afCEC/src/afCEC.cpp\",\"show_error_list\":true,\"type\":1},{\"column\":31,\"line\":332,\"log_line\":-1,\"log_path\":\"\",\"message\":\"comparison between signed and unsigned integer expressions [-Wsign-compare]\",\"path\":\"~/afCEC/src/afCEC.cpp\",\"show_error_list\":true,\"type\":1},{\"column\":31,\"line\":336,\"log_line\":-1,\"log_path\":\"\",\"message\":\"comparison between signed and unsigned integer expressions [-Wsign-compare]\",\"path\":\"~/afCEC/src/afCEC.cpp\",\"show_error_list\":true,\"type\":1},{\"column\":10,\"line\":857,\"log_line\":-1,\"log_path\":\"\",\"message\":\"unused variable &#x27;badCl&#x27; [-Wunused-variable]\",\"path\":\"~/afCEC/src/afCEC.cpp\",\"show_error_list\":true,\"type\":1},{\"column\":9,\"line\":858,\"log_line\":-1,\"log_path\":\"\",\"message\":\"unused variable &#x27;varErr&#x27; [-Wunused-variable]\",\"path\":\"~/afCEC/src/afCEC.cpp\",\"show_error_list\":true,\"type\":1},{\"column\":46,\"line\":1414,\"log_line\":-1,\"log_path\":\"\",\"message\":\"comparison between signed and unsigned integer expressions [-Wsign-compare]\",\"path\":\"~/afCEC/src/afCEC.cpp\",\"show_error_list\":true,\"type\":1},{\"column\":88,\"line\":1414,\"log_line\":-1,\"log_path\":\"\",\"message\":\"comparison between signed and unsigned integer expressions [-Wsign-compare]\",\"path\":\"~/afCEC/src/afCEC.cpp\",\"show_error_list\":true,\"type\":1},{\"column\":35,\"line\":1416,\"log_line\":-1,\"log_path\":\"\",\"message\":\"comparison between signed and unsigned integer expressions [-Wsign-compare]\",\"path\":\"~/afCEC/src/afCEC.cpp\",\"show_error_list\":true,\"type\":1},{\"column\":39,\"line\":1417,\"log_line\":-1,\"log_path\":\"\",\"message\":\"comparison between signed and unsigned integer expressions [-Wsign-compare]\",\"path\":\"~/afCEC/src/afCEC.cpp\",\"show_error_list\":true,\"type\":1},{\"column\":60,\"line\":741,\"log_line\":-1,\"log_path\":\"\",\"message\":\"&#x27;bestVar&#x27; may be used uninitialized in this function [-Wmaybe-uninitialized]\",\"path\":\"~/afCEC/src/afCEC.cpp\",\"show_error_list\":true,\"type\":1},{\"column\":60,\"line\":739,\"log_line\":-1,\"log_path\":\"\",\"message\":\"&#x27;bestAxis&#x27; may be used uninitialized in this function [-Wmaybe-uninitialized]\",\"path\":\"~/afCEC/src/afCEC.cpp\",\"show_error_list\":true,\"type\":1},{\"column\":37,\"line\":666,\"log_line\":-1,\"log_path\":\"\",\"message\":\"&#x27;bestCl&#x27; may be used uninitialized in this function [-Wmaybe-uninitialized]\",\"path\":\"~/afCEC/src/afCEC.cpp\",\"show_error_list\":true,\"type\":1},{\"column\":31,\"line\":631,\"log_line\":-1,\"log_path\":\"\",\"message\":\"&#x27;bestCl&#x27; may be used uninitialized in this function [-Wmaybe-uninitialized]\",\"path\":\"~/afCEC/src/afCEC.cpp\",\"show_error_list\":true,\"type\":1},{\"column\":52,\"line\":602,\"log_line\":-1,\"log_path\":\"\",\"message\":\"&#x27;bestVar&#x27; may be used uninitialized in this function [-Wmaybe-uninitialized]\",\"path\":\"~/afCEC/src/afCEC.cpp\",\"show_error_list\":true,\"type\":1},{\"column\":52,\"line\":600,\"log_line\":-1,\"log_path\":\"\",\"message\":\"&#x27;bestAxis&#x27; may be used uninitialized in this function [-Wmaybe-uninitialized]\",\"path\":\"~/afCEC/src/afCEC.cpp\",\"show_error_list\":true,\"type\":1},{\"column\":35,\"line\":527,\"log_line\":-1,\"log_path\":\"\",\"message\":\"&#x27;bestCl&#x27; may be used uninitialized in this function [-Wmaybe-uninitialized]\",\"path\":\"~/afCEC/src/afCEC.cpp\",\"show_error_list\":true,\"type\":1},{\"column\":56,\"line\":493,\"log_line\":-1,\"log_path\":\"\",\"message\":\"&#x27;bestVar&#x27; may be used uninitialized in this function [-Wmaybe-uninitialized]\",\"path\":\"~/afCEC/src/afCEC.cpp\",\"show_error_list\":true,\"type\":1},{\"column\":56,\"line\":491,\"log_line\":-1,\"log_path\":\"\",\"message\":\"&#x27;bestAxis&#x27; may be used uninitialized in this function [-Wmaybe-uninitialized]\",\"path\":\"~/afCEC/src/afCEC.cpp\",\"show_error_list\":true,\"type\":1},{\"column\":64,\"line\":1225,\"log_line\":-1,\"log_path\":\"\",\"message\":\"&#x27;bestVarIncl&#x27; may be used uninitialized in this function [-Wmaybe-uninitialized]\",\"path\":\"~/afCEC/src/afCEC.cpp\",\"show_error_list\":true,\"type\":1},{\"column\":53,\"line\":1221,\"log_line\":-1,\"log_path\":\"\",\"message\":\"&#x27;EMinIncl&#x27; may be used uninitialized in this function [-Wmaybe-uninitialized]\",\"path\":\"~/afCEC/src/afCEC.cpp\",\"show_error_list\":true,\"type\":1},{\"column\":64,\"line\":1220,\"log_line\":-1,\"log_path\":\"\",\"message\":\"&#x27;bestAxisIncl&#x27; may be used uninitialized in this function [-Wmaybe-uninitialized]\",\"path\":\"~/afCEC/src/afCEC.cpp\",\"show_error_list\":true,\"type\":1},{\"column\":51,\"line\":1223,\"log_line\":-1,\"log_path\":\"\",\"message\":\"&#x27;bestClIncl&#x27; may be used uninitialized in this function [-Wmaybe-uninitialized]\",\"path\":\"~/afCEC/src/afCEC.cpp\",\"show_error_list\":true,\"type\":1},{\"column\":60,\"line\":1140,\"log_line\":-1,\"log_path\":\"\",\"message\":\"&#x27;bestVarIncl&#x27; may be used uninitialized in this function [-Wmaybe-uninitialized]\",\"path\":\"~/afCEC/src/afCEC.cpp\",\"show_error_list\":true,\"type\":1},{\"column\":49,\"line\":1135,\"log_line\":-1,\"log_path\":\"\",\"message\":\"&#x27;EMinIncl&#x27; may be used uninitialized in this function [-Wmaybe-uninitialized]\",\"path\":\"~/afCEC/src/afCEC.cpp\",\"show_error_list\":true,\"type\":1},{\"column\":60,\"line\":1133,\"log_line\":-1,\"log_path\":\"\",\"message\":\"&#x27;bestAxisIncl&#x27; may be used uninitialized in this function [-Wmaybe-uninitialized]\",\"path\":\"~/afCEC/src/afCEC.cpp\",\"show_error_list\":true,\"type\":1},{\"column\":127,\"line\":1114,\"log_line\":-1,\"log_path\":\"\",\"message\":\"&#x27;bestClIncl&#x27; may be used uninitialized in this function [-Wmaybe-uninitialized]\",\"path\":\"~/afCEC/src/afCEC.cpp\",\"show_error_list\":true,\"type\":1},{\"column\":52,\"line\":1139,\"log_line\":-1,\"log_path\":\"\",\"message\":\"&#x27;bestVarExcl&#x27; may be used uninitialized in this function [-Wmaybe-uninitialized]\",\"path\":\"~/afCEC/src/afCEC.cpp\",\"show_error_list\":true,\"type\":1},{\"column\":41,\"line\":1134,\"log_line\":-1,\"log_path\":\"\",\"message\":\"&#x27;EMinExcl&#x27; may be used uninitialized in this function [-Wmaybe-uninitialized]\",\"path\":\"~/afCEC/src/afCEC.cpp\",\"show_error_list\":true,\"type\":1},{\"column\":52,\"line\":1132,\"log_line\":-1,\"log_path\":\"\",\"message\":\"&#x27;bestAxisExcl&#x27; may be used uninitialized in this function [-Wmaybe-uninitialized]\",\"path\":\"~/afCEC/src/afCEC.cpp\",\"show_error_list\":true,\"type\":1},{\"column\":37,\"line\":982,\"log_line\":-1,\"log_path\":\"\",\"message\":\"&#x27;bestVar&#x27; may be used uninitialized in this function [-Wmaybe-uninitialized]\",\"path\":\"~/afCEC/src/afCEC.cpp\",\"show_error_list\":true,\"type\":1},{\"column\":37,\"line\":980,\"log_line\":-1,\"log_path\":\"\",\"message\":\"&#x27;bestAxis&#x27; may be used uninitialized in this function [-Wmaybe-uninitialized]\",\"path\":\"~/afCEC/src/afCEC.cpp\",\"show_error_list\":true,\"type\":1},{\"column\":69,\"line\":1496,\"log_line\":-1,\"log_path\":\"\",\"message\":\"&#x27;dMinInd&#x27; may be used uninitialized in this function [-Wmaybe-uninitialized]\",\"path\":\"~/afCEC/src/afCEC.cpp\",\"show_error_list\":true,\"type\":1}]"
build-last-errors-base-dir="~/afCEC/"
build-last-outputs="[{\"output\":\"==> Rcmd.exe INSTALL --preclean --no-multiarch --with-keep.source afCEC\\n\\n\",\"type\":0},{\"output\":\"* installing to library 'C:/Program Files/R/R-3.4.3/library'\\r\\n\",\"type\":1},{\"output\":\"* installing *source* package 'afCEC' ...\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"** libs\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"c:/Rtools/mingw_64/bin/g++  -I\\\"C:/PROGRA~1/R/R-34~1.3/include\\\" -DNDEBUG  -I\\\"C:/Program Files/R/R-3.4.3/library/Rcpp/include\\\" -I\\\"C:/Program Files/R/R-3.4.3/library/RcppArmadillo/include\\\"        -O2 -Wall  -mtune=generic -c RcppExports.cpp -o RcppExports.o\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"c:/Rtools/mingw_64/bin/g++  -I\\\"C:/PROGRA~1/R/R-34~1.3/include\\\" -DNDEBUG  -I\\\"C:/Program Files/R/R-3.4.3/library/Rcpp/include\\\" -I\\\"C:/Program Files/R/R-3.4.3/library/RcppArmadillo/include\\\"        -O2 -Wall  -mtune=generic -c afCEC.cpp -o afCEC.o\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"afCEC.cpp: In function 'float RandomFloat()':\\r\\n\",\"type\":1},{\"output\":\"afCEC.cpp:23:23: warning: dereferencing type-punned pointer will break strict-aliasing rules [-Wstrict-aliasing]\\r\\n\",\"type\":1},{\"output\":\"     *((unsigned *)&tmp) = (seed & 8388607) | 1065353216;\\r\\n\",\"type\":1},{\"output\":\"                       ^\\r\\n\",\"type\":1},{\"output\":\"afCEC.cpp: In function 'bool CholeskyRankOneUpdate(arma::mat&, arma::vec)':\\r\\n\",\"type\":1},{\"output\":\"afCEC.cpp:32:23: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\\r\\n\",\"type\":1},{\"output\":\"     for (int i = 0; i < L.n_rows; ++i) {\\r\\n\",\"type\":1},{\"output\":\"                       ^\\r\\n\",\"type\":1},{\"output\":\"afCEC.cpp:38:31: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\\r\\n\",\"type\":1},{\"output\":\"         for (int j = i + 1; j < L.n_cols; ++j) {\\r\\n\",\"type\":1},{\"output\":\"                               ^\\r\\n\",\"type\":1},{\"output\":\"afCEC.cpp: In function 'bool CholeskyRankOneDowndate(arma::mat&, arma::vec)':\\r\\n\",\"type\":1},{\"output\":\"afCEC.cpp:52:23: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\\r\\n\",\"type\":1},{\"output\":\"     for (int i = 0; i < L.n_rows; ++i) {\\r\\n\",\"type\":1},{\"output\":\"                       ^\\r\\n\",\"type\":1},{\"output\":\"afCEC.cpp:58:31: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\\r\\n\",\"type\":1},{\"output\":\"         for (int j = i + 1; j < L.n_cols; ++j) {\\r\\n\",\"type\":1},{\"output\":\"                               ^\\r\\n\",\"type\":1},{\"output\":\"afCEC.cpp: In function 'void UpdateMeansForQuadraticFunction(Rcpp::List&)':\\r\\n\",\"type\":1},{\"output\":\"afCEC.cpp:83:21: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\\r\\n\",\"type\":1},{\"output\":\"             if (dir < m.n_elem - 1) tmp.subvec(dir, m.n_elem - 2) = m.subvec(dir + 1, m.n_elem - 1);\\r\\n\",\"type\":1},{\"output\":\"                     ^\\r\\n\",\"type\":1},{\"output\":\"afCEC.cpp:85:31: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\\r\\n\",\"type\":1},{\"output\":\"             for (int k = 0; k < (coeffs.n_elem - 1) / 2; ++k) {\\r\\n\",\"type\":1},{\"output\":\"                               ^\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"afCEC.cpp: In function 'Rcpp::List CalculateEllipsoidsOfConfidenceForQuadraticFunction(Rcpp::List, double, int)':\\r\\n\",\"type\":1},{\"output\":\"afCEC.cpp:188:31: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\\r\\n\",\"type\":1},{\"output\":\"             for (int j = 0; j < verts.n_rows; ++j) {\\r\\n\",\"type\":1},{\"output\":\"                               ^\\r\\n\",\"type\":1},{\"output\":\"afCEC.cpp:224:31: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\\r\\n\",\"type\":1},{\"output\":\"             for (int j = 0; j < faces.n_rows; ++j) {\\r\\n\",\"type\":1},{\"output\":\"                               ^\\r\\n\",\"type\":1},{\"output\":\"afCEC.cpp:236:31: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\\r\\n\",\"type\":1},{\"output\":\"             for (int j = 0; j < faces.n_rows; ++j) {\\r\\n\",\"type\":1},{\"output\":\"                               ^\\r\\n\",\"type\":1},{\"output\":\"afCEC.cpp:245:31: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\\r\\n\",\"type\":1},{\"output\":\"             for (int j = 0; j < vNormals.n_rows; ++j) vNormals.row(j) = normalise(vNormals.row(j));\\r\\n\",\"type\":1},{\"output\":\"                               ^\\r\\n\",\"type\":1},{\"output\":\"afCEC.cpp:249:31: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\\r\\n\",\"type\":1},{\"output\":\"             for (int j = 0; j < faces.n_rows; ++j) {\\r\\n\",\"type\":1},{\"output\":\"                               ^\\r\\n\",\"type\":1},{\"output\":\"afCEC.cpp:280:31: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\\r\\n\",\"type\":1},{\"output\":\"             for (int j = 0; j < vertsM.n_rows; ++j) {\\r\\n\",\"type\":1},{\"output\":\"                               ^\\r\\n\",\"type\":1},{\"output\":\"afCEC.cpp:311:31: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\\r\\n\",\"type\":1},{\"output\":\"             for (int j = 0; j < facesM.n_rows; ++j) {\\r\\n\",\"type\":1},{\"output\":\"                               ^\\r\\n\",\"type\":1},{\"output\":\"afCEC.cpp:323:31: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\\r\\n\",\"type\":1},{\"output\":\"             for (int j = 0; j < facesM.n_rows; ++j) {\\r\\n\",\"type\":1},{\"output\":\"                               ^\\r\\n\",\"type\":1},{\"output\":\"afCEC.cpp:332:31: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\\r\\n\",\"type\":1},{\"output\":\"             for (int j = 0; j < vNormalsM.n_rows; ++j) vNormalsM.row(j) = normalise(vNormalsM.row(j));\\r\\n\",\"type\":1},{\"output\":\"                               ^\\r\\n\",\"type\":1},{\"output\":\"afCEC.cpp:336:31: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\\r\\n\",\"type\":1},{\"output\":\"             for (int j = 0; j < facesM.n_rows; ++j) {\\r\\n\",\"type\":1},{\"output\":\"                               ^\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"afCEC.cpp: In function 'Rcpp::List afCECHartigan(const mat&, int, arma::ivec, double, double, int, int, const mat&, bool)':\\r\\n\",\"type\":1},{\"output\":\"afCEC.cpp:857:10: warning: unused variable 'badCl' [-Wunused-variable]\\r\\n\",\"type\":1},{\"output\":\"     mat *badCl; // !!! !!! !!!\\r\\n\",\"type\":1},{\"output\":\"          ^\\r\\n\",\"type\":1},{\"output\":\"afCEC.cpp:858:9: warning: unused variable 'varErr' [-Wunused-variable]\\r\\n\",\"type\":1},{\"output\":\"     int varErr = 0; // !!! !!! !!!\\r\\n\",\"type\":1},{\"output\":\"         ^\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"afCEC.cpp: In function 'Rcpp::List afCECCppRoutine(const mat&, int, SEXPREC* const&, double, double, int, int, int, const string&, const mat&, bool)':\\r\\n\",\"type\":1},{\"output\":\"afCEC.cpp:1414:46: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\\r\\n\",\"type\":1},{\"output\":\"                 if ((initialLabelsMat.n_rows != pointsNum) || (initialLabelsMat.n_cols != numberOfStarts))\\r\\n\",\"type\":1},{\"output\":\"                                              ^\\r\\n\",\"type\":1},{\"output\":\"afCEC.cpp:1414:88: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\\r\\n\",\"type\":1},{\"output\":\"                 if ((initialLabelsMat.n_rows != pointsNum) || (initialLabelsMat.n_cols != numberOfStarts))\\r\\n\",\"type\":1},{\"output\":\"                                                                                        ^\\r\\n\",\"type\":1},{\"output\":\"afCEC.cpp:1416:35: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\\r\\n\",\"type\":1},{\"output\":\"                 for (int i = 0; i < initialLabelsMat.n_rows; ++i) {\\r\\n\",\"type\":1},{\"output\":\"                                   ^\\r\\n\",\"type\":1},{\"output\":\"afCEC.cpp:1417:39: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]\\r\\n\",\"type\":1},{\"output\":\"                     for (int j = 0; j < initialLabelsMat.n_cols; ++j) {\\r\\n\",\"type\":1},{\"output\":\"                                       ^\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"afCEC.cpp: In function 'SEXPREC* afCECLloyd(const mat&, int, arma::ivec, double, double, int, int, const mat&, bool)':\\r\\n\",\"type\":1},{\"output\":\"afCEC.cpp:741:60: warning: 'bestVar' may be used uninitialized in this function [-Wmaybe-uninitialized]\\r\\n\",\"type\":1},{\"output\":\"                 (*sigma[*it])(bestAxis, bestAxis) = bestVar;\\r\\n\",\"type\":1},{\"output\":\"                                                            ^\\r\\n\",\"type\":1},{\"output\":\"afCEC.cpp:739:60: warning: 'bestAxis' may be used uninitialized in this function [-Wmaybe-uninitialized]\\r\\n\",\"type\":1},{\"output\":\"                 (*sigma[*it])(bestAxis, span::all).fill(0.0);\\r\\n\",\"type\":1},{\"output\":\"                                                            ^\\r\\n\",\"type\":1},{\"output\":\"afCEC.cpp:666:37: warning: 'bestCl' may be used uninitialized in this function [-Wmaybe-uninitialized]\\r\\n\",\"type\":1},{\"output\":\"                     ++card[labels[i]];\\r\\n\",\"type\":1},{\"output\":\"                                     ^\\r\\n\",\"type\":1},{\"output\":\"afCEC.cpp:631:31: warning: 'bestCl' may be used uninitialized in this function [-Wmaybe-uninitialized]\\r\\n\",\"type\":1},{\"output\":\"             labels[i] = bestCl;\\r\\n\",\"type\":1},{\"output\":\"                               ^\\r\\n\",\"type\":1},{\"output\":\"afCEC.cpp:602:52: warning: 'bestVar' may be used uninitialized in this function [-Wmaybe-uninitialized]\\r\\n\",\"type\":1},{\"output\":\"         (*sigma[*it])(bestAxis, bestAxis) = bestVar;\\r\\n\",\"type\":1},{\"output\":\"                                                    ^\\r\\n\",\"type\":1},{\"output\":\"afCEC.cpp:600:52: warning: 'bestAxis' may be used uninitialized in this function [-Wmaybe-uninitialized]\\r\\n\",\"type\":1},{\"output\":\"         (*sigma[*it])(bestAxis, span::all).fill(0.0);\\r\\n\",\"type\":1},{\"output\":\"                                                    ^\\r\\n\",\"type\":1},{\"output\":\"afCEC.cpp:527:35: warning: 'bestCl' may be used uninitialized in this function [-Wmaybe-uninitialized]\\r\\n\",\"type\":1},{\"output\":\"                 labels[i] = bestCl;\\r\\n\",\"type\":1},{\"output\":\"                                   ^\\r\\n\",\"type\":1},{\"output\":\"afCEC.cpp:493:56: warning: 'bestVar' may be used uninitialized in this function [-Wmaybe-uninitialized]\\r\\n\",\"type\":1},{\"output\":\"             (*sigma[*it])(bestAxis, bestAxis) = bestVar;\\r\\n\",\"type\":1},{\"output\":\"                                                        ^\\r\\n\",\"type\":1},{\"output\":\"afCEC.cpp:491:56: warning: 'bestAxis' may be used uninitialized in this function [-Wmaybe-uninitialized]\\r\\n\",\"type\":1},{\"output\":\"             (*sigma[*it])(bestAxis, span::all).fill(0.0);\\r\\n\",\"type\":1},{\"output\":\"                                                        ^\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"afCEC.cpp: In function 'Rcpp::List afCECHartigan(const mat&, int, arma::ivec, double, double, int, int, const mat&, bool)':\\r\\n\",\"type\":1},{\"output\":\"afCEC.cpp:1225:64: warning: 'bestVarIncl' may be used uninitialized in this function [-Wmaybe-uninitialized]\\r\\n\",\"type\":1},{\"output\":\"                             variances[bestClIncl] = bestVarIncl;\\r\\n\",\"type\":1},{\"output\":\"                                                                ^\\r\\n\",\"type\":1},{\"output\":\"afCEC.cpp:1221:53: warning: 'EMinIncl' may be used uninitialized in this function [-Wmaybe-uninitialized]\\r\\n\",\"type\":1},{\"output\":\"                             E[bestClIncl] = EMinIncl;\\r\\n\",\"type\":1},{\"output\":\"                                                     ^\\r\\n\",\"type\":1},{\"output\":\"afCEC.cpp:1220:64: warning: 'bestAxisIncl' may be used uninitialized in this function [-Wmaybe-uninitialized]\\r\\n\",\"type\":1},{\"output\":\"                             bestAxes[bestClIncl] = bestAxisIncl;\\r\\n\",\"type\":1},{\"output\":\"                                                                ^\\r\\n\",\"type\":1},{\"output\":\"afCEC.cpp:1223:51: warning: 'bestClIncl' may be used uninitialized in this function [-Wmaybe-uninitialized]\\r\\n\",\"type\":1},{\"output\":\"                             labels[j] = bestClIncl;\\r\\n\",\"type\":1},{\"output\":\"                                                   ^\\r\\n\",\"type\":1},{\"output\":\"afCEC.cpp:1140:60: warning: 'bestVarIncl' may be used uninitialized in this function [-Wmaybe-uninitialized]\\r\\n\",\"type\":1},{\"output\":\"                         variances[bestClIncl] = bestVarIncl;\\r\\n\",\"type\":1},{\"output\":\"                                                            ^\\r\\n\",\"type\":1},{\"output\":\"afCEC.cpp:1135:49: warning: 'EMinIncl' may be used uninitialized in this function [-Wmaybe-uninitialized]\\r\\n\",\"type\":1},{\"output\":\"                         E[bestClIncl] = EMinIncl;\\r\\n\",\"type\":1},{\"output\":\"                                                 ^\\r\\n\",\"type\":1},{\"output\":\"afCEC.cpp:1133:60: warning: 'bestAxisIncl' may be used uninitialized in this function [-Wmaybe-uninitialized]\\r\\n\",\"type\":1},{\"output\":\"                         bestAxes[bestClIncl] = bestAxisIncl;\\r\\n\",\"type\":1},{\"output\":\"                                                            ^\\r\\n\",\"type\":1},{\"output\":\"afCEC.cpp:1114:127: warning: 'bestClIncl' may be used uninitialized in this function [-Wmaybe-uninitialized]\\r\\n\",\"type\":1},{\"output\":\"                         v = (points.submat(1, i, size(dim - 1, 1)) - m[bestClIncl]->subvec(1, dim - 1)) / sqrt(card[bestClIncl] + 1);\\r\\n\",\"type\":1},{\"output\":\"                                                                                                                               ^\\r\\n\",\"type\":1},{\"output\":\"afCEC.cpp:1139:52: warning: 'bestVarExcl' may be used uninitialized in this function [-Wmaybe-uninitialized]\\r\\n\",\"type\":1},{\"output\":\"                         variances[cl] = bestVarExcl;\\r\\n\",\"type\":1},{\"output\":\"                                                    ^\\r\\n\",\"type\":1},{\"output\":\"afCEC.cpp:1134:41: warning: 'EMinExcl' may be used uninitialized in this function [-Wmaybe-uninitialized]\\r\\n\",\"type\":1},{\"output\":\"                         E[cl] = EMinExcl;\\r\\n\",\"type\":1},{\"output\":\"                                         ^\\r\\n\",\"type\":1},{\"output\":\"afCEC.cpp:1132:52: warning: 'bestAxisExcl' may be used uninitialized in this function [-Wmaybe-uninitialized]\\r\\n\",\"type\":1},{\"output\":\"                         bestAxes[cl] = bestAxisExcl;\\r\\n\",\"type\":1},{\"output\":\"                                                    ^\\r\\n\",\"type\":1},{\"output\":\"afCEC.cpp:982:37: warning: 'bestVar' may be used uninitialized in this function [-Wmaybe-uninitialized]\\r\\n\",\"type\":1},{\"output\":\"             variances[*it] = bestVar;\\r\\n\",\"type\":1},{\"output\":\"                                     ^\\r\\n\",\"type\":1},{\"output\":\"afCEC.cpp:980:37: warning: 'bestAxis' may be used uninitialized in this function [-Wmaybe-uninitialized]\\r\\n\",\"type\":1},{\"output\":\"             bestAxes[*it] = bestAxis;\\r\\n\",\"type\":1},{\"output\":\"                                     ^\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"afCEC.cpp: In function 'Rcpp::List afCECCppRoutine(const mat&, int, SEXPREC* const&, double, double, int, int, int, const string&, const mat&, bool)':\\r\\n\",\"type\":1},{\"output\":\"afCEC.cpp:1496:69: warning: 'dMinInd' may be used uninitialized in this function [-Wmaybe-uninitialized]\\r\\n\",\"type\":1},{\"output\":\"                             if (is_finite(dMin)) labels[j] = dMinInd;\\r\\n\",\"type\":1},{\"output\":\"                                                                     ^\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"c:/Rtools/mingw_64/bin/gcc  -I\\\"C:/PROGRA~1/R/R-34~1.3/include\\\" -DNDEBUG  -I\\\"C:/Program Files/R/R-3.4.3/library/Rcpp/include\\\" -I\\\"C:/Program Files/R/R-3.4.3/library/RcppArmadillo/include\\\"        -O2 -Wall  -std=gnu99 -mtune=generic -c registerDynamicSymbol.c -o registerDynamicSymbol.o\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"c:/Rtools/mingw_64/bin/g++ -shared -s -static-libgcc -o afCEC.dll tmp.def RcppExports.o afCEC.o registerDynamicSymbol.o -LC:/PROGRA~1/R/R-34~1.3/bin/x64 -lRlapack -LC:/PROGRA~1/R/R-34~1.3/bin/x64 -lRblas -lgfortran -lm -lquadmath -LC:/PROGRA~1/R/R-34~1.3/bin/x64 -lR\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"installing to C:/Program Files/R/R-3.4.3/library/afCEC/libs/x64\\r\\n\",\"type\":1},{\"output\":\"** R\\r\\n\",\"type\":1},{\"output\":\"** data\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"** preparing package for lazy loading\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"** help\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"*** installing help indices\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"  converting help for package 'afCEC'\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"    finding HTML links ...\",\"type\":1},{\"output\":\" wykonano\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"    afCEC-package                           html  \\r\\n\",\"type\":1},{\"output\":\"    afCEC                                   html  \",\"type\":1},{\"output\":\"\\r\\n\",\"type\":1},{\"output\":\"    airplane                                html  \\r\\n\",\"type\":1},{\"output\":\"    cat                                     html  \\r\\n\",\"type\":1},{\"output\":\"    dog                                     html  \\r\\n\",\"type\":1},{\"output\":\"    fire                                    html  \\r\\n\",\"type\":1},{\"output\":\"    helicopter                              html  \\r\\n\",\"type\":1},{\"output\":\"    pathbased                               html  \\r\\n\",\"type\":1},{\"output\":\"    plot.afCEC                              html  \",\"type\":1},{\"output\":\"\\r\\n\",\"type\":1},{\"output\":\"    rabbit                                  html  \\r\\n\",\"type\":1},{\"output\":\"    ship                                    html  \\r\\n\",\"type\":1},{\"output\":\"    spiral                                  html  \\r\\n\",\"type\":1},{\"output\":\"    trumpet                                 html  \\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"** building package indices\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"** testing if installed package can be loaded\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"* DONE (afCEC)\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"In R CMD INSTALL\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1}]"
compile_pdf_state="{\"errors\":[],\"output\":\"\",\"running\":false,\"tab_visible\":false,\"target_file\":\"\"}"
console_procs="[]"
files.monitored-path=""
find-in-files-state="{\"handle\":\"\",\"input\":\"\",\"path\":\"\",\"regex\":true,\"results\":{\"file\":[],\"line\":[],\"lineValue\":[],\"matchOff\":[],\"matchOn\":[]},\"running\":false}"
imageDirtyState="0"
saveActionState="0"
