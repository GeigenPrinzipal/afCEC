airplane[1]
airplane[1,]
values[,1]
library(afCEC);
data(airplane);
values = matrix(rep(0, 5*3*dim(airplane)[1]), 5*3, dim(airplane)[1]);
for (i in 1:dim(airplane)[1]) {
tmp <- airplane[i,2:3];
for (j in 1:3) {
values[((j - 1) * 5) + 1] <- tmp[1]^2;
values[((j - 1) * 5) + 2] <- tmp[2]^2;
values[((j - 1) * 5) + 3] <- tmp[1];
values[((j - 1) * 5) + 4] <- tmp[2];
values[((j - 1) * 5) + 5] <- 1;
if (j < 3) tmp[j] <- airplane[i,j];
}
}
values[,1]
airplane[1,2:3]
library(afCEC);
data(airplane);
values = matrix(rep(0, 5*3*dim(airplane)[1]), 5*3, dim(airplane)[1]);
for (i in 1:dim(airplane)[1]) {
tmp <- airplane[i,2:3];
for (j in 1:3) {
values[((j - 1) * 5) + 1, i] <- tmp[1]^2;
values[((j - 1) * 5) + 2, i] <- tmp[2]^2;
values[((j - 1) * 5) + 3, i] <- tmp[1];
values[((j - 1) * 5) + 4, i] <- tmp[2];
values[((j - 1) * 5) + 5, i] <- 1;
if (j < 3) tmp[j] <- airplane[i,j];
}
}
values[,1]
library(afCEC);
data(airplane);
values = matrix(rep(0, 5*3*dim(airplane)[1]), 5*3, dim(airplane)[1]);
for (i in 1:dim(airplane)[1]) {
tmp <- airplane[i,2:3];
for (j in 1:3) {
values[((j - 1) * 5) + 1, i] <- tmp[1]^2;
values[((j - 1) * 5) + 2, i] <- tmp[2]^2;
values[((j - 1) * 5) + 3, i] <- tmp[1];
values[((j - 1) * 5) + 4, i] <- tmp[2];
values[((j - 1) * 5) + 5, i] <- 1;
if (j < 3) tmp[j] <- airplane[i,j];
}
}
result <- afCEC(airplane, 17, values=formula, numberOfStarts=1)
plot(res)
plot(result)
library(afCEC);
data(airplane);
values = matrix(rep(0, 5*3*dim(airplane)[1]), 5*3, dim(airplane)[1]);
for (i in 1:dim(airplane)[1]) {
tmp <- airplane[i,2:3];
for (j in 1:3) {
values[((j - 1) * 5) + 1, i] <- tmp[1]^2;
values[((j - 1) * 5) + 2, i] <- tmp[2]^2;
values[((j - 1) * 5) + 3, i] <- tmp[1];
values[((j - 1) * 5) + 4, i] <- tmp[2];
values[((j - 1) * 5) + 5, i] <- 1;
if (j < 3) tmp[j] <- airplane[i,j];
}
}
result <- afCEC(airplane, 17, values=values, numberOfStarts=1)
plot(result)
data(airplane)
plot3D(airplane)
plot3d(airplane)
plot3d(airplane,aspect=c(1,1,1))
plot3d(airplane,asp=c(1,1,1))
plot3d(airplane,ASPECT=c(1,1,1))
plot3d(airplane,aspect=FALSE)
plot3d(airplane,aspect=FALSE)
plot3d(airplane,aspect=FALSE)
plot3d(airplane,aspect=FALSE)
plot3d(airplane,aspect=FALSE)
rgl.postscript("airplane.eps",fmt="eps")
rgl.postscript("airplane.pdf",fmt="pdf")
rgl.postscript("airplane.pdf")
pdf("airplane.pdf")
rgl.postscript("airplane.pdf",fmt="pdf")
plot3d(airplane,aspect=FALSE)
rgl.postscript("airplane.pdf",fmt="pdf")
2+2
library(afCEC)
data(airplane)
plot3d(airplane,aspect=FALSE)
rgl.postscript("airplane.pdf",fmt="pdf")
library(afCEC)
library(texi2dvi)
texi2dvi
library(tools)
texi2pdf
texi2pdf("sdfdsf.pdf")
library(afCEC)
library(afCEC)
Rd2latex
Rd2HTML
library(tools)
Rd2latex
Rd2latex("airplane.Rd")
Rd2latex("man\airplane.Rd")
Rd2latex("man/airplane.Rd")
Rd2latex("man/airplane.Rd","o.tex")
Rd2latex("man/airplane.Rd")
library(afCEC)
Sys.which("pdflatex")
Sys.getenv(“PATH”)
Sys.getenv(“PATH”)
Sys.getenv()
Sys.getenv(PATH)
Sys.getenv("PATH")
data(airplane)
plot3d(airplane)
library(afCEC)
plot3d(airplane)
plot3d(airplane,aspect=FALSE)
plot3d(airplane,aspect=FALSE)
rgl.postscript("airplane.svg",fmt="svg")
rgl.postscript("airplane.pdf",fmt="pdf")
library(afCEC)
data(airplane)
dim(airplane)
library(afCEC)
library(afCEC)
library(afCEC)
data(ship)
plot3d(ship)
plot3d(ship,aspect=FALSE)
rgl.postscript("ship.pdf",fmt="pdf")
rgl.postscript("ship.svg",fmt="svg")
dim(ship)
data(rabbit)
plot3d(rabbit)
dim(rabbit)
rgl.postscript("rabbit.pdf",fmt="pdf")
rgl.postscript("rabbit.svg",fmt="svg")
data(trumpet)
dim(trumpet)
plot3d(trumpet)
plot3d(rabbit,aspect=FALSE)
plot3d(trumpet,aspect=FALSE)
rgl.postscript("trumpet.svg",fmt="svg")
rgl.postscript("trumpet.pdf",fmt="pdf")
dim(trumpet)
data(rabbit)
plot3d(rabbit)
plot3d(rabbit,aspect=FALSE)
rgl.postscript("rabbit.pdf",fmt="pdf")
rgl.postscript("rabbit.svg",fmt="svg")
data(helicopter)
dim(helicopter)
plot3d(helicopter,aspect=FALSE)
rgl.postscript("helicopter.svg",fmt="svg")
rgl.postscript("helicopter.pdf",fmt="pdf")
data(dog)
dim(dog)
plot(dog,asp=1,pch=20)
data(cat)
dim(cat)
plot(cat,asp=1,pch=20)
data(fire)
dim(fire)
plot(fire,asp=1,pch=20)
data(spiral)
dim(spiral)
plot(spiral,asp=1,pch=20)
data(pathbased)
dim(pathbased)
plot(pathbased,asp=1,pch=20)
rgb(1,1,1)
library(afCEC);
data(airplane);
result <- afCEC(airplane, 17, numberOfStarts=1);
plot(result);
library(afCEC);
data(cat);
plot(cat);
library(afCEC)
library(afCEC)
afCEC
library(afCEC);
points <- SampleSphereUniform(10000, 2);
plot3d(points);
plot3d(points,xlab="X",ylab="Y",zlab="Z")
plot3d(points,xlab="X",ylab="Y",zlab="Z")
rgl.postscript("SampleSphereUniform.pdf",fmt="pdf")
library(afCEC);
points <- SampleSphereUniform(1000, 2);
plot3d(points, xlab="X", ylab="Y", zlab="Z");
rgl.postscript("SampleSphereUniform.pdf",fmt="pdf")
rgl.postscript("SampleSphereUniform.svg",fmt="svg")
library(afCEC);
points <- SampleBallUniform(1000, 3);
plot3d(points, xlab="X", ylab="Y", zlab="Z");
rgl.postscript("SampleBallUniform.svg",fmt="svg")
rgl.postscript("SampleBallUniform.pdf",fmt="pdf")
library(afCEC);
points <- SampleMeshUniform("taj-mahal.obj", 1000);
plot3d(points, xlab="X", ylab="Y", zlab="Z");
library(afCEC);
points <- SampleMeshUniform("taj-mahal.obj", 1000);
plot3d(points, asp=c(1,1,1), xlab="X", ylab="Y", zlab="Z");
plot3d(points, asp=c(1,1,1))
plot3d(points, aspect=c(1,1,1))
plot3d(points, aspect=FALSE)
plot3d(points, aspect=FALSE, axes=FALSE)
plot3d(points, aspect=FALSE)
plot3d(points, aspect=FALSE, box=TRUE, axes=FALSE)
plot3d(points, aspect=FALSE)
plot3d(points, aspect=FALSE, top=FALSE)
plot3d(points, aspect=FALSE)
library(afCEC);
points <- SampleMeshUniform("taj-mahal.obj", 10000);
plot3d(points, asp=c(1,1,1), xlab="X", ylab="Y", zlab="Z");
library(afCEC);
points <- SampleMeshUniform("taj-mahal.obj", 100000);
plot3d(points, aspect=FALSE, axes=FALSE, xlab="X", ylab="Y", zlab="Z");
library(afCEC);
points <- SampleMeshUniform("taj-mahal.obj", 25000);
plot3d(points, aspect=FALSE, axes=FALSE, xlab="X", ylab="Y", zlab="Z");
rgl.bbox(xlen=0, ylen=0, zlen=0);
library(afCEC);
points <- SampleMeshUniform("taj-mahal.obj", 25000);
plot3d(points, aspect=FALSE, axes=FALSE, xlab="X", ylab="Y", zlab="Z");
axes3d();
library(afCEC);
points <- SampleMeshUniform("taj-mahal.obj", 25000);
plot3d(points, aspect=FALSE, axes=FALSE, xlab="X", ylab="Y", zlab="Z");
axes3d(box=TRUE);
library(afCEC);
points <- SampleMeshUniform("taj-mahal.obj", 25000);
plot3d(points, aspect=FALSE, axes=FALSE, xlab="X", ylab="Y", zlab="Z");
axes3d(box=TRUE, tick=FALSE);
library(afCEC);
points <- SampleMeshUniform("taj-mahal.obj", 25000);
plot3d(points, aspect=FALSE, axes=FALSE, xlab="X", ylab="Y", zlab="Z");
axes3d(box=TRUE, tick=FALSE, nticks=0);
rgl.bbox()
rgl.bbox(color="black")
library(afCEC);
points <- SampleMeshUniform("taj-mahal.obj", 25000);
plot3d(points, aspect=FALSE, axes=FALSE, xlab="X", ylab="Y", zlab="Z");
axes3d(xlen=0, ylen=0, zlen=0);
plot3d(points, aspect=FALSE, xlen=0, ylen=0, zlen=0, xlab="X", ylab="Y", zlab="Z");
library(afCEC);
points <- SampleMeshUniform("taj-mahal.obj", 25000);
plot3d(points, aspect=FALSE, axes=FALSE, xlab="X", ylab="Y", zlab="Z");
axes3d(box=TRUE, xlen=0, ylen=0, zlen=0);
library(afCEC);
points <- SampleMeshUniform("taj-mahal.obj", 25000);
plot3d(points, aspect=FALSE, axes=FALSE, xlab="X", ylab="Y", zlab="Z");
axes3d(box=TRUE, labels=FALSE, xlen=0, ylen=0, zlen=0);
library(afCEC);
points <- SampleMeshUniform("taj-mahal.obj", 25000);
plot3d(points, aspect=FALSE, axes=FALSE, xlab="", ylab="" zlab="");
axes3d(box=TRUE, xlen=0, ylen=0, zlen=0);
library(afCEC);
points <- SampleMeshUniform("taj-mahal.obj", 25000);
plot3d(points, aspect=FALSE, axes=FALSE, xlab="", ylab="", zlab="");
axes3d(box=TRUE, xlen=0, ylen=0, zlen=0);
library(afCEC);
points <- SampleMeshUniform("neptune.obj", 25000);
plot3d(points, aspect=FALSE, axes=FALSE, xlab="", ylab="", zlab="");
axes3d(box=TRUE, xlen=0, ylen=0, zlen=0);
library(afCEC);
points <- SampleMeshUniform("neptune.obj", 10000);
plot3d(points, aspect=FALSE, axes=FALSE, xlab="", ylab="", zlab="");
axes3d(box=TRUE, xlen=0, ylen=0, zlen=0);
rgl.postscript("SampleMeshUniform.pdf",fmt="pdf")
rgl.postscript("SampleMeshUniform.svg",fmt="svg")
library(afCEC);
points <- SampleTorusUniform(0.75, 0.25, 1000);
plot3d(points, aspect=FALSE, xlab="X", ylab="Y", zlab="Z");
library(afCEC);
points <- SampleTorusUniform(0.75, 0.25, 10000);
plot3d(points, aspect=FALSE, xlab="X", ylab="Y", zlab="Z");
rgl.postscript("SampleTorusUniform.pdf",fmt="pdf")
rgl.postscript("SampleTorusUniform.pdf",fmt="pdf")
rgl.postscript("SampleTorusUniform.pdf",fmt="pdf")
library(afCEC);
points <- SampleTorusUniform(0.75, 0.25, 1000);
plot3d(points, aspect=FALSE, xlab="X", ylab="Y", zlab="Z");
rgl.postscript("SampleTorusUniform.pdf",fmt="pdf")
rgl.postscript("SampleTorusUniform.svg",fmt="svg")
x<-c()
x
RandIndex
RandIndex(c(1,1),c(2,2),3,3)
RandIndex(c(1,1),c(2,2),3,3)
RandIndex(c(1,1),c(2.5,2),3,3)
RandIndex(c(1,1),c(2.55,2),3,3)
RandIndex(c(1,1),c(3.1,2),3,3)
RandIndex(c(1,1),c(3,2),3,3)
RandIndex(c(1,5),c(3,2),3,3)
RandIndex(c(1,5),c("a",2),3,3)
points1 <- SampleBallUniform(100, 2);
points1+c(1,2)
points1+c(100,100)
library(afCEC);
points1 <- SampleBallUniform(100, 2);
points2 <- (SampleBallUniform(200, 2)*2) + c(2,0);
points <- rbind(points1, points2);
plot(points)
plot(points1)
plot(points2)
plot(points2,pch=80)
plot(points2,pch=20)
pts=(SampleBallUniform(200, 2)*2)
plot(pts,pch=20)
plot(pts+c(2,0),pch=20)
rep(c(2,0),3)
plot(pts+matrix(rep(c(2,0),200)),pch=20)
plot(pts+matrix(rep(c(2,0),200),200,2),pch=20)
matrix(rep(c(2,0),10),10,2)
matrix(rep(c(2,0),10),10,2,byrow=TRUE)
plot(pts+matrix(rep(c(2,0),200),200,2,byrow=TRUE),pch=20)
library(afCEC);
points1 <- SampleBallUniform(1000, 2);
points2 <- (SampleBallUniform(2000, 2)*2) + matrix(rep(c(2,0),2000),2000,2,byrow=TRUE);
points <- rbind(points1, points2);
plot(points,pch=20)
library(afCEC);
points1 <- SampleBallUniform(1000, 2);
points2 <- (SampleBallUniform(2000, 2)*2) + matrix(rep(c(2,0),2000),2000,2,byrow=TRUE);
points <- rbind(points1, points2);
labels <- c(rep(0,1000), rep(1,2000));
result <- afCEC(points, 2);
plot(result);
library(afCEC);
points1 <- SampleBallUniform(1000, 2);
points2 <- (SampleBallUniform(2000, 2)*2) + matrix(rep(c(2,0),2000),2000,2,byrow=TRUE);
points <- rbind(points1, points2);
labels <- c(rep(0,1000), rep(1,2000));
result <- afCEC(points, 2);
plot(result);
library(afCEC);
points1 <- SampleBallUniform(1000, 2);
points2 <- (SampleBallUniform(2000, 2)*2) + matrix(rep(c(2,0),2000),2000,2,byrow=TRUE);
points <- rbind(points1, points2);
labels <- c(rep(0,1000), rep(1,2000));
result <- afCEC(points, 2);
plot(result);
labels
RandIndex(labels,result->labels)
RandIndex(labels,result->labels,2,2)
result->labels
result
RandIndex(labels,result$labels,2,2)
result$labels
RandIndex(labels,as.integer(result$labels),2,2)
RandIndex(as.integer(labels),as.integer(result$labels),2,2)
typeof
typeof(1)
typeof(labels)
typeof(result$labels)
result$labels
c(result$labels,2)
c(c(1,2),c(3,4))
labels
labels
library(afCEC);
points1 <- SampleBallUniform(1000, 2);
points2 <- (SampleBallUniform(2000, 2)*2) + matrix(rep(c(2,0),2000),2000,2,byrow=TRUE);
points <- rbind(points1, points2);
labels <- c(rep(0,1000), rep(1,2000));
result <- afCEC(points, 2);
labels
RandIndex(labels,result$labels,2,2)
library(afCEC);
points1 <- SampleBallUniform(1000, 2);
points2 <- (SampleBallUniform(2000, 2)*2) + matrix(rep(c(2,0),2000),2000,2,byrow=TRUE);
points <- rbind(points1, points2);
labels <- c(rep(0,1000), rep(1,2000));
result <- afCEC(points, 2);
RandIndex(labels, result$labels, 2, 2);
plot(result)
print(cat("aaa",2))
print(paste("a","b"))
print(paste("a","b",sep=""))
print(paste("a","b",3,sep=""))
print(paste("a","b",c(3,4),sep=""))
library(afCEC);
points1 <- SampleBallUniform(1000, 2);
points2 <- (SampleBallUniform(2000, 2)*2) + matrix(rep(c(2,0),2000),2000,2,byrow=TRUE);
points <- rbind(points1, points2);
labels <- c(rep(0,1000), rep(1,2000));
result <- afCEC(points, 2);
ri <- RandIndex(labels, result$labels);
print(paste("The Rand index between the model clustering and the clustering obtained by the afCEC function is: ", ri, ".", sep=""));
ri
library(afCEC);
points1 <- SampleBallUniform(1000, 2);
points2 <- (SampleBallUniform(2000, 2)*2) + matrix(rep(c(2,0),2000),2000,2,byrow=TRUE);
points <- rbind(points1, points2);
labels <- c(rep(0,1000), rep(1,2000));
result <- afCEC(points, 2);
ri <- RandIndex(labels, result$labels, 2, 2);
print(paste("The Rand index between the model clustering and the clustering obtained by the afCEC function is: ", ri, ".", sep=""));
library(afCEC);
points1 <- SampleBallUniform(1000,2);
points2 <- (SampleBallUniform(2000,2)*2) + matrix(rep(c(2,0),2000),2000,2,byrow=TRUE);
points <- rbind(points1,points2);
labels <- c(rep(0,1000),rep(1,2000));
result <- afCEC(points,2);
ri <- RandIndex(labels,result$labels,2,2);
print(
paste(
"The Jaccard index between the model clustering and the clustering obtained by the ",
"afCEC function is: ",
ri,
".",
sep=""
)
);
library(afCEC);
points1 <- SampleBallUniform(1000,2);
points2 <- (SampleBallUniform(2000,2)*2) + matrix(rep(c(2,0),2000),2000,2,byrow=TRUE);
points <- rbind(points1,points2);
labels <- c(rep(0,1000),rep(1,2000));
result <- afCEC(points,2);
ri <- JaccardIndex(labels,result$labels,2,2);
print(
paste(
"The Jaccard index between the model clustering and the clustering obtained by the ",
"afCEC function is: ",
ri,
".",
sep=""
)
);
library(afCEC)
library(afCEC);
data(dog);
result <- afCEC(airplane, 7, values="quadratic");
library(afCEC);
data(dog);
result <- afCEC(dog, 7, values="quadratic");
plot(result)
library(afCEC);
data(dog);
result <- afCEC(dog, 7, values="quadratic", method="Lloyd");
plot(result)
library(afCEC);
data(dog);
result <- afCEC(dog, 7, values="quadratic", method="Lloyd", labels="random");
library(afCEC);
data(dog);
result <- afCEC(dog, 7, values="quadratic", method="Lloyd", initialLabels="random");
plot(result)
library(afCEC);
data(airplane);
formula = paste(
"f:R^2 -> R^5\n",
"f^1(x) = x(1)^2\n",
"f^2(x) = x(2)^2\n",
"f^3(x) = x(1)\n",
"f^4(x) = x(2)\n",
"f^5(x) = 1\n",
sep=""
);
result <- afCEC(airplane, 17, values=formula, numberOfStarts=1)
2+2
result
plot(result)
plot(result)
library(afCEC)
library(afCEC)
afCEC
library(afCEC)
library(afCEC);
data(airplane);
result <- afCEC(airplane, 17, numberOfStarts=1);
plot(result);
library(afCEC)
iris
iris[1:50]
iris[1:50,]
iris[1:50,1:4]
iris[1:50,1:1]
library(afCEC)
lab=c(rep(0,(dim(iris)[1])/3),rep(1,(dim(iris)[1])/3),rep(2,(dim(iris)[1])/3))
lab
dim(lab)
size(lab)
length(lab)
lab=matrix(lab,150,1,BYROW=TRUE)
lab=matrix(lab,150,1,byrow=TRUE)
lab
dim(lab)
afCEC(as.matrix(iris[,1:2]),maxClusters=3,numberOfStarts=1,initialLabels=matrix(lab, dim(iris)[1]))
afCEC(as.matrix(iris[,1:2]),maxClusters=3,numberOfStarts=1,initialLabels=lab)
afCEC(as.matrix(iris[,1:4]),maxClusters=3,numberOfStarts=1,initialLabels=lab)
afCEC(as.matrix(iris[,1:4]),maxClusters=3,numberOfStarts=1,initialLabels=as.integer(lab))
dim(iris)
dim(iris)[1]
library(afCEC);
lab=c(rep(0,(dim(iris)[1])/3),rep(1,(dim(iris)[1])/3),rep(2,(dim(iris)[1])/3));
lab=as.integer(matrix(lab,length(lab),1,byrow=TRUE));
afCEC(as.matrix(iris[,1:2]),maxClusters=3,numberOfStarts=1,initialLabels=lab)
library(afCEC);
lab=c(rep(0,(dim(iris)[1])/3),rep(1,(dim(iris)[1])/3),rep(2,(dim(iris)[1])/3));
lab=as.integer(matrix(lab,length(lab),1,byrow=TRUE));
res=afCEC(as.matrix(iris[,1:2]),maxClusters=3,numberOfStarts=1,initialLabels=lab);
plot(res)
library(afCEC);
lab=c(rep(0,(dim(iris)[1])/3),rep(1,(dim(iris)[1])/3),rep(2,(dim(iris)[1])/3));
lab=as.integer(matrix(lab,length(lab),1,byrow=TRUE));
res=afCEC(as.matrix(iris[,1:2]),maxClusters=3,numberOfStarts=1,initialLabels=lab);
plot(res);
